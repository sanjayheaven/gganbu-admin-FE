{"version":3,"file":"roleInfo.234f529f.js","sources":["../../src/api/role.ts","../../src/pages/staff/components/roleDetailModal.tsx","../../src/pages/staff/roleInfo.tsx"],"sourcesContent":["import instance from \"./axios\"\n\nexport const getRoles = (data?: object) => {\n  return instance.get(\"/roles/getRoles\", { params: data })\n}\nexport const createRole = (data: object) => {\n  return instance.post(\"/roles/createRole\", data)\n}\nexport const updateRole = (id: string, data?: object) => {\n  return instance.post(\"/roles/updateRole\", { roleId: id, ...data })\n}\nexport const deleteRole = (id: string) => {\n  return instance.post(\"/roles/deleteRole\", { roleId: id })\n}\n","import { Input, ModalProps } from \"antd\"\nimport type { IRole } from \"../type\"\nimport type { IUseSelectedItemRes } from \"../../../hooks/useSelectedItem\"\nimport { Modal, Tree, Form } from \"antd\"\nimport { routesForRoleTree } from \"../../../router\"\nimport { createFormItems } from \"../../../components/form/formConfig\"\nimport { useTranslation } from \"react-i18next\"\n\nexport default function RoleDetailModal({\n  selectedItem,\n  setSelectedItem,\n  ...modal\n}: ModalProps & IUseSelectedItemRes<IRole>) {\n  const { t } = useTranslation()\n  return (\n    <Modal {...modal} className=\"min-w-max\">\n      <Form labelCol={{ span: 3 }}>\n        {createFormItems([\n          {\n            label: t(\"NAME\"),\n            required: true,\n            children: (\n              <Input\n                value={selectedItem.name}\n                onChange={(e) => setSelectedItem({ ...selectedItem, name: e.target.value })}\n              />\n            ),\n          },\n          {\n            label: t(\"DESC\"),\n            required: true,\n            children: (\n              <Input.TextArea\n                value={selectedItem.desc}\n                onChange={(e) => setSelectedItem({ ...selectedItem, desc: e.target.value })}\n              />\n            ),\n          },\n        ])}\n      </Form>\n      <div className=\" grid grid-cols-3 mt-5 gap-4 \">\n        <div className=\"text-lg font-bold \">{t(\"role.ROUTE_AUTH\")}</div>\n        <div className=\"text-lg font-bold \">{t(\"role.CONTENT_AUTH\")}</div>\n      </div>\n      <div className=\"grid grid-cols-3 mt-5 gap-4 max-h-[40vh] overflow-auto\">\n        <Tree\n          onCheck={(value: string[]) => setSelectedItem({ ...selectedItem, routeAuth: value })}\n          checkedKeys={selectedItem.routeAuth}\n          fieldNames={{ key: \"path\" }}\n          checkable\n          treeData={routesForRoleTree}\n        />\n        <div></div>\n        {/* <div>\n          <div className=\"text-lg font-bold \">Other Auth</div>\n        </div> */}\n      </div>\n    </Modal>\n  )\n}\n","import type { IInfoResponce } from \"../../types\"\nimport type { IFilterRole, IRole } from \"./type\"\nimport { Input, TableColumnsType, TablePaginationConfig } from \"antd\"\nimport { message, Modal } from \"antd\"\nimport { Card, Table, Button, Space } from \"antd\"\nimport FilterAction from \"../../components/filterAction\"\nimport { RoleApi } from \"../../api\"\nimport RoleDetailModal from \"./components/roleDetailModal\"\nimport {\n  useData,\n  useFilter,\n  useLoading,\n  useModal,\n  usePageInfoFilterEffect,\n  useSelectedItem,\n  useTablePagination,\n} from \"../../hooks\"\nimport { createFormItems } from \"../../components/form/formConfig\"\nimport { useTranslation } from \"react-i18next\"\n\nexport default function RoleInfo() {\n  const { filter, setFilter } = useFilter<IFilterRole>({})\n  const { pagination, setPagination } = useTablePagination()\n  const { selectedItem, setSelectedItem } = useSelectedItem<IRole>({})\n  const { modal, setModal } = useModal({})\n  const { data, setData } = useData<IRole[]>([])\n  const { loading, setLoading } = useLoading(false)\n  const { t } = useTranslation()\n\n  const getInfo = async (paginationProp?: TablePaginationConfig) => {\n    setLoading(true)\n    try {\n      const res: unknown = await RoleApi.getRoles({\n        ...filter,\n        current: paginationProp?.current || pagination.current,\n        pageSize: paginationProp?.pageSize || pagination.pageSize,\n      })\n      const { items = [], total }: IInfoResponce = res\n      setLoading(false)\n      setData(items)\n      setPagination({ ...pagination, ...(paginationProp || {}), total })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleOk = async () => {\n    const { name } = selectedItem\n    if (!name) {\n      return message.error(\"Please finish all required info\")\n    }\n    try {\n      if (selectedItem._id) {\n        await RoleApi.updateRole(selectedItem._id, selectedItem)\n      } else {\n        await RoleApi.createRole(selectedItem)\n      }\n      setModal({ ...modal, open: false })\n      await getInfo() // reget the data\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  usePageInfoFilterEffect(filter, () => getInfo({ ...pagination, current: 1 }))\n\n  const columns: TableColumnsType<IRole> = [\n    { title: t(\"NAME\"), dataIndex: \"name\" },\n    { title: t(\"DESC\"), dataIndex: \"desc\" },\n    { title: t(\"role.STAFF_COUNT\"), dataIndex: \"staffCount\" },\n    {\n      title: t(\"ACTION\"),\n      dataIndex: \"action\",\n      render: (text, record) => {\n        return (\n          <Space>\n            <a\n              onClick={() => {\n                setSelectedItem({ ...record })\n                setModal({ ...modal, open: true, title: t(\"EDIT\") })\n              }}\n            >\n              {t(\"EDIT\")}\n            </a>\n            <a\n              className=\"text-red-600\"\n              onClick={() => {\n                Modal.confirm({\n                  content: \"Sure to delete this item?\",\n                  onOk: async () => {\n                    console.log(record, 111919)\n                    try {\n                      await RoleApi.deleteRole(record._id)\n                      await getInfo()\n                    } catch (error) {\n                      console.log(error)\n                    }\n                  },\n                })\n              }}\n            >\n              {t(\"DELETE\")}\n            </a>\n          </Space>\n        )\n      },\n    },\n  ].map((item) => {\n    return { ...item, key: item.dataIndex }\n  })\n\n  return (\n    <div>\n      <Card className=\"mb-4\">\n        <div className=\"grid grid-cols-4 gap-4\">\n          {createFormItems([\n            {\n              label: t(\"SEARCH\"),\n              className: \"mb-0\",\n              children: (\n                <Input\n                  value={filter.name}\n                  onChange={(e) => setFilter({ ...filter, name: e.target.value })}\n                  placeholder={`${t(\"NAME\")}/${t(\"DESC\")}`}\n                />\n              ),\n            },\n          ])}\n          <FilterAction className=\"mb-0\" onQuery={() => getInfo()} onReset={() => setFilter({})} />\n        </div>\n      </Card>\n      <Card\n        title={\n          <Button\n            onClick={() => {\n              setModal({ ...modal, title: t(\"ADD\"), open: true })\n              setSelectedItem({})\n            }}\n            type=\"primary\"\n          >\n            + {t(\"role.NEW_ROLE\")}\n          </Button>\n        }\n      >\n        <Table\n          rowKey={(record: IRole) => record._id}\n          onChange={(pagination) => getInfo(pagination)}\n          pagination={pagination}\n          loading={loading}\n          columns={columns}\n          dataSource={data}\n        />\n      </Card>\n      <RoleDetailModal\n        selectedItem={selectedItem}\n        setSelectedItem={setSelectedItem}\n        {...modal}\n        onOk={() => handleOk()}\n      />\n    </div>\n  )\n}\n"],"names":["getRoles","data","instance","createRole","updateRole","id","deleteRole","RoleDetailModal","selectedItem","setSelectedItem","modal","t","useTranslation","Modal","_jsx","Form","span","createFormItems","label","required","children","Input","name","e","target","value","desc","_jsxs","Tree","routeAuth","key","routesForRoleTree","RoleInfo","filter","setFilter","useFilter","pagination","setPagination","useTablePagination","useSelectedItem","setModal","useModal","setData","useData","loading","setLoading","useLoading","getInfo","paginationProp","res","RoleApi","current","pageSize","items","total","handleOk","message","error","_id","open","columns","title","dataIndex","render","text","record","Space","confirm","content","onOk","map","item","Card","className","FilterAction","Button","Table"],"mappings":"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"}